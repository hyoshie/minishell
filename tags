Minfinite	signal/test/infinite.c	/^int	main(void)$/
Mmain	env/main.c	/^int	main(void)$/
Msignal1	signal/test/signal1.c	/^int	main(void)$/
Msignal2	signal/test/signal2.c	/^int	main(void)$/
Msignal4	signal/test/signal4.c	/^int	main(void)$/
Mtest_main	test/test_main.c	/^int	main(int argc, char **argv)$/
add_cmd	ref/srcs/set_parse_cmd.c	/^void	add_cmd(t_cmd **res, t_cmd *new)$/
add_tmpfile	ref/srcs/tmp_file.c	/^void	add_tmpfile(t_tmp *new)$/
append_nonvar	expander/expand_var.c	/^char	*append_nonvar(char *str, char *current, size/
append_open	exec/ft_open.c	/^static int	append_open(char *file)$/
append_var	expander/expand_var.c	/^char	*append_var(char *str, char *value)$/
call_testfunc	expander/main.c	/^void	call_testfunc(int idx)$/
cd_cmd	ref/srcs/builtin_cd.c	/^int	cd_cmd(t_env **env_list, t_cmd *cmd)$/
change_flag_quart	ref/srcs/get_cmd_search_len2.c	/^void	change_flag_quart(char *str, size_t *str_inde/
check	ref/libft/ft_split.c	/^static int	check(char a, char character)$/
check_build_in	ref/srcs/build_in.c	/^int	check_build_in(t_cmd *cmd)$/
check_digit	ref/libft/ft_itoa.c	/^static int	check_digit(int n)$/
check_flag	ref/srcs/ft_substr_cmd.c	/^static int	check_flag(char *str, size_t start, siz/
check_quote_begin	lexer/tkn_strlen.c	/^bool	check_quote_begin(enum e_quote *quote, char c/
check_quote_end	lexer/tkn_strlen.c	/^bool	check_quote_end(enum e_quote *quote, char c)$/
check_redirect	ref/srcs/child_check_redirect.c	/^int	check_redirect(t_cmd **cmd)$/
check_set_char	ref/libft/ft_strtrim.c	/^static size_t	check_set_char(const char *s1, \\$/
checkover	ref/libft/ft_atoi.c	/^static long	checkover(long ans, int digit)$/
child_proc	exec/multi_procs.c	/^static int	child_proc(t_proc *proc, int pipes[][2]/
clear_set	libft/myfunc/to_vector.c	/^static void	*clear_set(t_list **lst, char *str)$/
close_tmpfile	ref/srcs/tmp_file.c	/^void	close_tmpfile(void)$/
cmd_err	exec/ft_exec.c	/^static void	cmd_err(char **cmd)$/
count_pipe	ref/srcs/pipe_utils.c	/^int	count_pipe(t_cmd *cmd)$/
count_process	parser/to_proclist.c	/^size_t	count_process(t_token *tokens)$/
count_quote	parser/remove_quote.c	/^size_t	count_quote(char *word)$/
count_redirect	parser/set_ioinfo.c	/^static size_t	count_redirect(t_token *tokens)$/
count_word	parser/set_cmdinfo.c	/^static size_t	count_word(t_token *tokens)$/
delete_list_two	ref/srcs/pipe_utils.c	/^void	delete_list_two(t_cmd **cmd)$/
delete_list_two_next	ref/srcs/pipe_utils.c	/^void	delete_list_two_next(t_cmd *cmd)$/
detect_leak	env/main.c	/^void	detect_leak(void)$/
dict_addback	libft/myfunc/dict_addback.c	/^bool	dict_addback(t_dict *head, t_dict *new)$/
dict_clear	libft/myfunc/dict_clear.c	/^void	dict_clear(t_dict *head)$/
dict_delone	libft/myfunc/dict_delone.c	/^bool	dict_delone(t_dict *elem)$/
dict_new	libft/myfunc/dict_new.c	/^t_dict	*dict_new(char *key, char *value)$/
dict_size	libft/myfunc/dict_size.c	/^size_t	dict_size(t_dict *head)$/
dict_to_array	libft/myfunc/dict_to_array.c	/^char	**dict_to_array(t_dict *dict_head, char *conn/
display_sig_info	signal/signal.c	/^int	display_sig_info(int sig)$/
dollar_expansion	ref/srcs/interpret_dollar_quotation.c	/^void	dollar_expansion(t_cmd *target, size_t dindex/
double_char_dup	ref/srcs/utils.c	/^char	**double_char_dup(char **envp)$/
double_char_free	ref/srcs/utils_free.c	/^void	*double_char_free(char **list)$/
double_char_free_4	ref/srcs/utils_free.c	/^void	double_char_free_4(char **ptr1, char **ptr2, /
echo_cmd	ref/srcs/builtin_2.c	/^int	echo_cmd(t_cmd *cmd)$/
env_cmd	ref/srcs/env_builtin.c	/^int	env_cmd(t_env *env_list)$/
exec_builtin	builtin/exec_builtin.c	/^int	exec_builtin(t_proc *proc, t_info *info)$/
exec_cd	builtin/exec_builtin.c	/^int	exec_cd(char **args, t_info *info)$/
exec_cmd	ref/srcs/exec_cmd.c	/^int	exec_cmd(t_cmd *cmd, t_env **env_list)$/
exec_cmd_child	ref/srcs/child.c	/^void	exec_cmd_child(t_cmd *cmd, t_env *env_list_t,/
exec_cmd_is_cmd	ref/srcs/child_exec.c	/^static int	exec_cmd_is_cmd(char *tmp_cmd, char **c/
exec_cmd_no_pipe	ref/srcs/exec_cmd_pipe.c	/^int	exec_cmd_no_pipe(t_common_process *common_proc/
exec_cmd_no_pipe_set_fd	ref/srcs/exec_cmd_pipe.c	/^int	exec_cmd_no_pipe_set_fd(t_common_process *comm/
exec_cmd_pipe	ref/srcs/exec_cmd_pipe.c	/^int	exec_cmd_pipe(t_common_process *common_process/
exec_echo	builtin/exec_echo.c	/^int	exec_echo(char **args, t_info *info)$/
exec_env	builtin/exec_builtin.c	/^int	exec_env(t_info *info)$/
exec_export	builtin/exec_export.c	/^int	exec_export(char **args, t_info *info)$/
exec_pwd	builtin/exec_builtin.c	/^int	exec_pwd(void)$/
exec_unset	builtin/exec_unset.c	/^int	exec_unset(char **args, t_info *info)$/
exit_cmd	ref/srcs/builtin_exit.c	/^int	exit_cmd(t_env *env_list, t_cmd *cmd)$/
expand_var	expander/expand_var.c	/^char	*expand_var(char *word, t_info *info)$/
expand_var_all	expander/expand_var_all.c	/^t_token	*expand_var_all(t_token *tokens, t_info *i/
expansion_param	ref/srcs/var_expansion.c	/^void	expansion_param(t_cmd *target, t_env *env_lis/
export_cmd	ref/srcs/builtin_export.c	/^int	export_cmd(t_env *env_list, t_cmd *cmd)$/
fetch_value	expander/expand_var.c	/^char	*fetch_value(char *prefix, size_t key_len, t_/
find_begin	lexer/to_token.c	/^static char	*find_begin(char *str)$/
free	exec/loop_shell.c	/^\/\/need change the free(froc)$/
free_common_process	ref/srcs/utils_free.c	/^void	free_common_process(t_common_process *c_p)$/
free_list_cmd	ref/srcs/set_parse_cmd.c	/^void	free_list_cmd(t_cmd *cmd)$/
free_list_cmd_one	ref/srcs/utils2.c	/^void	free_list_cmd_one(t_cmd *cmd)$/
free_vector	libft/myfunc/free_vector.c	/^void	free_vector(char **vector)$/
ft_atoi	ref/libft/ft_atoi.c	/^int	ft_atoi(const char *str)$/
ft_atoll	ref/srcs/ft_lltoatoll.c	/^long long	ft_atoll(const char *str)$/
ft_bidir_lst_add_back	ref/srcs/srakuma_env_utils.c	/^void	ft_bidir_lst_add_back(t_bilst **bidir_list, c/
ft_bidir_lst_last	ref/srcs/srakuma_env_utils.c	/^t_bilst	*ft_bidir_lst_last(t_bilst *env_list)$/
ft_bidir_lst_new	ref/srcs/srakuma_env_utils.c	/^t_bilst	*ft_bidir_lst_new(char *key, char *value)$/
ft_bidir_lst_size	ref/srcs/srakuma_env_utils.c	/^size_t	ft_bidir_lst_size(t_bilst *bilist)$/
ft_bzero	ref/libft/ft_bzero.c	/^void	ft_bzero(void *str, size_t num)$/
ft_calloc	ref/libft/ft_calloc.c	/^void	*ft_calloc(size_t num, size_t size)$/
ft_cat_prefix	ref/srcs/cd_get_curpath.c	/^static void	ft_cat_prefix(char buff[], char *dir_o/
ft_change_flag	ref/srcs/general_expansion.c	/^void	ft_change_flag(t_cmd *target, size_t old_len,/
ft_check_cd_error	ref/srcs/builtin_cd.c	/^int	ft_check_cd_error(t_cmd *cmd)$/
ft_check_enval	ref/srcs/env_builtin.c	/^int	ft_check_enval(char *key)$/
ft_check_keyword_flag	ref/srcs/heredoc.c	/^static int	ft_check_keyword_flag(char *flag)$/
ft_check_shlvl	ref/srcs/init_env.c	/^static int	ft_check_shlvl(t_env *shlvl)$/
ft_check_stat_dir	ref/srcs/cd_get_curpath.c	/^static int	ft_check_stat_dir(char *tmp, char *end,/
ft_cmd_first	ref/srcs/srakuma_cmd_utils.c	/^t_cmd	*ft_cmd_first(t_cmd *last)$/
ft_cmd_last	ref/srcs/srakuma_cmd_utils.c	/^t_cmd	*ft_cmd_last(t_cmd *cmd)$/
ft_cnt_appearance	ref/srcs/srakuma_utils_1.c	/^static int	ft_cnt_appearance(char *haystack, char /
ft_count_digit	ref/srcs/ft_lltoatoll.c	/^size_t	ft_count_digit(long long num)$/
ft_determine_if_remove	ref/srcs/interpret_dollar_quotation.c	/^int	ft_determine_if_remove(t_cmd *target, char *dq/
ft_exec	exec/ft_exec.c	/^void	ft_exec(char **cmd, t_info *info)$/
ft_exec_chdir	ref/srcs/builtin_cd.c	/^int	ft_exec_chdir(t_cmd *cmd, char curpath[], char/
ft_exit	ref/srcs/utils2.c	/^void	ft_exit(int	exit_num)$/
ft_exit_with_num	ref/srcs/builtin_exit.c	/^static void	ft_exit_with_num(t_cmd *cmd, t_env *en/
ft_free_all_bidir_lst	ref/srcs/utils2.c	/^void	ft_free_all_bidir_lst(t_bilst *env_lst)$/
ft_free_cmd	ref/srcs/utils.c	/^void	ft_free_cmd(t_cmd *cmd)$/
ft_free_pointer	ref/srcs/utils_free.c	/^void	*ft_free_pointer(void *ptr1, void *ptr2, void/
ft_get_canonical_form	ref/srcs/cd_canonicalisation.c	/^void	ft_get_canonical_form(char buff[])$/
ft_get_curpath	ref/srcs/cd_get_curpath.c	/^int	ft_get_curpath(t_env *env_list, char *dir_ope,/
ft_get_key_in_str	ref/srcs/srakuma_utils_1.c	/^char	*ft_get_key_in_str(t_cmd *target, char *dolla/
ft_get_new_env	ref/srcs/init_env.c	/^t_env	*ft_get_new_env(void)$/
ft_get_shlvl	ref/srcs/init_env.c	/^char	*ft_get_shlvl(int level)$/
ft_incliment_shlvl	ref/srcs/init_env.c	/^int	ft_incliment_shlvl(t_env **env_list)$/
ft_init_env	ref/srcs/init_env.c	/^t_env	*ft_init_env(char **envp)$/
ft_interpret_dq_sq	ref/srcs/interpret_dollar_quotation.c	/^void	ft_interpret_dq_sq(t_cmd *target)$/
ft_isalnum	ref/libft/ft_isalnum.c	/^int	ft_isalnum(int c)$/
ft_isalpha	ref/libft/ft_isalpha.c	/^int	ft_isalpha(int c)$/
ft_isascii	ref/libft/ft_isascii.c	/^int	ft_isascii(int c)$/
ft_isdigit	ref/libft/ft_isdigit.c	/^int	ft_isdigit(int c)$/
ft_isprint	ref/libft/ft_isprint.c	/^int	ft_isprint(int c)$/
ft_isspace	ref/srcs/ft_isspace.c	/^int	ft_isspace(int c)$/
ft_itoa	ref/libft/ft_itoa.c	/^char	*ft_itoa(int n)$/
ft_lltoa	ref/srcs/ft_lltoatoll.c	/^char	*ft_lltoa(long long num)$/
ft_lstadd_back	ref/libft/ft_lstadd_back.c	/^void	ft_lstadd_back(t_list **lst, t_list *new)$/
ft_lstadd_front	ref/libft/ft_lstadd_front.c	/^void	ft_lstadd_front(t_list **lst, t_list *new)$/
ft_lstclear	ref/libft/ft_lstclear.c	/^void	ft_lstclear(t_list **lst, void (*del)(void *)/
ft_lstdelone	ref/libft/ft_lstdelone.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void *)/
ft_lstiter	ref/libft/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/
ft_lstlast	ref/libft/ft_lstlast.c	/^t_list	*ft_lstlast(t_list *lst)$/
ft_lstmap	ref/libft/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, void *(*f)(void *),/
ft_lstmap_check_null	ref/libft/ft_lstmap.c	/^static int	ft_lstmap_check_null(void *contentpoint/
ft_lstnew	ref/libft/ft_lstnew.c	/^t_list	*ft_lstnew(void *content)$/
ft_lstsize	ref/libft/ft_lstsize.c	/^int	ft_lstsize(t_list *lst)$/
ft_memccpy	ref/libft/ft_memccpy.c	/^void	*ft_memccpy(void *dest, const void *src, int /
ft_memchr	ref/libft/ft_memchr.c	/^void	*ft_memchr(const void *src, int c, size_t n)$/
ft_memcmp	ref/libft/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size/
ft_memcpy	ref/libft/ft_memcpy.c	/^void	*ft_memcpy(void *dest, const void *src, size_/
ft_memmove	ref/libft/ft_memmove.c	/^void	*ft_memmove(void *dest, const void *src, size/
ft_memset	ref/libft/ft_memset.c	/^void	*ft_memset(void *str, int character, size_t n/
ft_mv_to_home	ref/srcs/builtin_cd.c	/^int	ft_mv_to_home(t_env *env_list)$/
ft_open	exec/ft_open.c	/^int	ft_open(char *file, enum e_kind open_mode)$/
ft_port_free_cmd	ref/srcs/utils_free.c	/^void	ft_port_free_cmd(t_cmd *first, t_cmd *last, i/
ft_put_2array_cmd	ref/srcs/utils.c	/^void	ft_put_2array_cmd(t_cmd *array)$/
ft_putchar_fd	ref/libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/
ft_putendl_fd	ref/libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/
ft_putnbr_fd	ref/libft/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/
ft_putstr_fd	ref/libft/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/
ft_remake_cmd	ref/srcs/var_expansion.c	/^t_cmd	*ft_remake_cmd(t_cmd *target, size_t pre_ind/
ft_remove_dot	ref/srcs/cd_canonicalisation.c	/^static void	ft_remove_dot(char buff[], char *first/
ft_remove_dq_sq	ref/srcs/interpret_dollar_quotation.c	/^static void	ft_remove_dq_sq(t_cmd *target, char *p/
ft_remove_slash	ref/srcs/cd_canonicalisation.c	/^static void	ft_remove_slash(char *first)$/
ft_remove_target	ref/srcs/var_expansion.c	/^t_cmd	*ft_remove_target(t_cmd *target, t_cmd *new)/
ft_rev_str	ref/libft/ft_itoa.c	/^static char	*ft_rev_str(char *tab, int size)$/
ft_set_curpath	ref/srcs/builtin_cd.c	/^static int	ft_set_curpath(t_cmd *cmd, t_env *env_l/
ft_set_exit_flag	ref/srcs/builtin_exit.c	/^int	ft_set_exit_flag(const char *str, long long *n/
ft_set_pwd	ref/srcs/builtin_2.c	/^char	*ft_set_pwd(char *dir, int flag)$/
ft_split	ref/libft/ft_split.c	/^char	**ft_split(const char *str, char character)$/
ft_split_path	ref/srcs/ft_split_path.c	/^char	**ft_split_path(const char *str, char charact/
ft_split_str	ref/libft/ft_split.c	/^static int	ft_split_str(char **answer, const char /
ft_splitfree	utils/utils.c	/^char	**ft_splitfree(char **tab)$/
ft_str_pre_sla_len	ref/srcs/cd_canonicalisation.c	/^static size_t	ft_str_pre_sla_len(char *first, char/
ft_strajoin	libft/myfunc/ft_strajoin.c	/^char	*ft_strajoin(char **str, char *connector)$/
ft_strcat	ref/libft/ft_strjoin.c	/^char	*ft_strcat(char *s1, const char *s2)$/
ft_strchr	ref/libft/ft_strchr.c	/^char	*ft_strchr(const char *src, int c)$/
ft_strclen	libft/myfunc/ft_strclen.c	/^size_t	ft_strclen(const char *str, int c)$/
ft_strclen_array	libft/myfunc/ft_strclen.c	/^size_t	ft_strclen_array(const char *str, char *sep/
ft_strcmp	libft/myfunc/ft_strcmp.c	/^int	ft_strcmp(const char *s1, const char *s2)$/
ft_strcpy	ref/libft/ft_strdup.c	/^char	*ft_strcpy(char *dest, const char *src)$/
ft_strdup	ref/libft/ft_strdup.c	/^char	*ft_strdup(const char *str)$/
ft_strjoin	ref/libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/
ft_strjoin_3	ref/srcs/utils.c	/^char	*ft_strjoin_3(char *str1, char *str2, char *s/
ft_strlcat	ref/libft/ft_strlcat.c	/^size_t	ft_strlcat(char *s1, const char *s2, size_t/
ft_strlcpy	ref/libft/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dest, const char *src, siz/
ft_strlen	ref/libft/ft_strlen.c	/^size_t	ft_strlen(const char *str)$/
ft_strmapi	ref/libft/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned/
ft_strncmp	ref/libft/ft_strncmp.c	/^int	ft_strncmp(const char *str1, const char *str2,/
ft_strncpy	ref/srcs/ft_strncpy.c	/^char	*ft_strncpy(char *dest, char *src, unsigned i/
ft_strndup	libft/myfunc/ft_strndup.c	/^char	*ft_strndup(const char *s1, size_t n)$/
ft_strnstr	ref/libft/ft_strnstr.c	/^char	*ft_strnstr(const char *s1, const char *s2, s/
ft_strrchr	ref/libft/ft_strrchr.c	/^char	*ft_strrchr(const char *src, int c)$/
ft_strtrim	ref/libft/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/
ft_strtrim_malloc_trim_str	ref/libft/ft_strtrim.c	/^static char	*ft_strtrim_malloc_trim_str(size_t *f_/
ft_substr	ref/libft/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start,/
ft_substr_cmd	ref/srcs/ft_substr_cmd.c	/^t_cmd	*ft_substr_cmd(char *str, size_t start, size/
ft_subsutitute_str	ref/srcs/interpret_dollar_quotation.c	/^size_t	ft_subsutitute_str(t_cmd *target, t_env *va/
ft_term_heredoc	ref/srcs/heredoc.c	/^static int	ft_term_heredoc(int out_fd, char *line)/
ft_tolower	ref/libft/ft_tolower.c	/^int	ft_tolower(int c)$/
ft_toupper	ref/libft/ft_toupper.c	/^int	ft_toupper(int c)$/
ft_trijoin	libft/myfunc/ft_trijoin.c	/^char	*ft_trijoin(char const *s1, char const *s2, c/
ft_try_cat_dir	ref/srcs/cd_get_curpath.c	/^int	ft_try_cat_dir(char *cdpath, char *dir_ope, ch/
ft_vallen	ref/srcs/srakuma_utils_1.c	/^size_t	ft_vallen(char *dollar_ptr)$/
ft_wordspliting	ref/srcs/var_expansion.c	/^t_cmd	*ft_wordspliting(t_cmd *target)$/
ft_xstrajoin	libft/myfunc/ft_xstrajoin.c	/^char	*ft_xstrajoin(char **str, char *connector)$/
ft_xstrjoin_free	expander/utils.c	/^char	*ft_xstrjoin_free(char *str1, char *str2)$/
ft_xstrndup	libft/myfunc/ft_xstrndup.c	/^char	*ft_xstrndup(const char *s1, size_t n)$/
ft_xtrijoin	libft/myfunc/ft_xtrijoin.c	/^char	*ft_xtrijoin(char const *s1, char const *s2, /
get_cmd_search_len	ref/srcs/get_cmd_search_len.c	/^size_t	get_cmd_search_len(char *str, size_t *str_i/
get_cmd_start_len	ref/srcs/set_parse_cmd.c	/^static t_cmd	*get_cmd_start_len(char *str, size_t /
get_expnaded_str	ref/srcs/general_expansion.c	/^char	*get_expnaded_str(char *old_str, char *new, c/
get_minlst	ref/srcs/builtin_export.c	/^t_env	*get_minlst(t_env *env_list, t_env *limit)$/
get_path	exec/ft_exec.c	/^static char	*get_path(char *cmd, char **sp_cmd, t_/
getnumber	ref/libft/ft_atoi.c	/^static long	getnumber(const char *str, int *num, l/
handler	signal/test/signal1.c	/^void	handler(int sig)$/
handler_42	signal/test/signal2.c	/^void	handler_42(int sig)$/
heredoc	ref/srcs/heredoc.c	/^int	heredoc(t_cmd *here, char *file_name, t_env *e/
heredoc_child	ref/srcs/heredoc.c	/^int	heredoc_child(t_cmd *here, char *file_name, t_/
heredoc_handler	exec/heredoc_handler.c	/^void	heredoc_handler(t_io *io_info, t_info *info)$/
heredoc_open	exec/heredoc_handler.c	/^static int	heredoc_open(char **heredoc_file_name)$/
heredoc_parent	ref/srcs/heredoc.c	/^int	heredoc_parent(pid_t id)$/
heredoc_sig_handler	ref/srcs/signal_handler.c	/^void	heredoc_sig_handler(int sig)$/
ifeq	Makefile	/^ifeq ($(shell uname), Darwin)$/
in_redirect_open	exec/ft_open.c	/^static int	in_redirect_open(char *file)$/
inequality_branch_second	ref/srcs/child_check_redirect.c	/^static int	inequality_branch_second(t_cmd **cmd, /
inequality_l1	ref/srcs/inequality.c	/^int	inequality_l1(t_cmd *cmd)$/
inequality_l2	ref/srcs/inequality.c	/^int	inequality_l2(t_cmd *cmd)$/
inequality_r1	ref/srcs/inequality.c	/^int	inequality_r1(t_cmd *cmd)$/
inequality_r2	ref/srcs/inequality.c	/^int	inequality_r2(t_cmd *cmd)$/
init_common_process	ref/srcs/exec_cmd.c	/^static void	init_common_process(t_common_process */
init_envs	env/env_utils.c	/^t_dict	*init_envs(void)$/
init_ioinfo	parser/set_ioinfo.c	/^static t_io	*init_ioinfo(t_token *tokens)$/
init_procinfo	parser/to_proclist.c	/^t_proc	*init_procinfo(size_t proc_num)$/
io_lstadd_back	parser/io_lst.c	/^void	io_lstadd_back(t_io **lst, t_io *new)$/
io_lstclear	parser/io_lstdel.c	/^void	io_lstclear(t_io **lst, void(*del)(void *))$/
io_lstdelone	parser/io_lstdel.c	/^void	io_lstdelone(t_io *lst, void (*del)(void *))$/
io_lstlast	parser/io_lst.c	/^t_io	*io_lstlast(t_io *lst)$/
io_lstnew	parser/io_lst.c	/^t_io	*io_lstnew(void)$/
is_2chr_operator	lexer/lex_ctype.c	/^bool	is_2chr_operator(const char *str)$/
is_builtin	builtin/exec_builtin.c	/^bool	is_builtin(char **args)$/
is_cmd	parser/proc_ctype.c	/^bool	is_cmd(t_token *token)$/
is_end	lexer/lex_ctype.c	/^bool	is_end(char c)$/
is_env_val_ele	ref/srcs/srakuma_utils_1.c	/^int	is_env_val_ele(int c)$/
is_first_proc	exec/exec_bool.c	/^bool	is_first_proc(t_proc *proc)$/
is_ifs	lexer/lex_ctype.c	/^bool	is_ifs(char c)$/
is_io_operator	parser/proc_ctype.c	/^bool	is_io_operator(enum e_kind kind)$/
is_last_proc	exec/exec_bool.c	/^bool	is_last_proc(t_proc *proc)$/
is_no_cmd	exec/exec_bool.c	/^bool	is_no_cmd(t_proc *proc)$/
is_ok	ref/srcs/ft_lltoatoll.c	/^static int	is_ok(long long num, int c, int flag)$/
is_op_kind	parser/proc_ctype.c	/^bool	is_op_kind(enum e_kind kind)$/
is_operator	lexer/lex_ctype.c	/^bool	is_operator(char c)$/
is_pipe	parser/proc_ctype.c	/^bool	is_pipe(enum e_kind kind)$/
is_quote	lexer/lex_ctype.c	/^bool	is_quote(char c)$/
is_redirect	exec/exec_bool.c	/^bool	is_redirect(t_io *io_info)$/
is_single_proc	exec/exec_bool.c	/^bool	is_single_proc(t_proc *proc)$/
launch_shell	exec/loop_shell.c	/^bool	launch_shell(t_proc *proc, t_info *info)$/
line_count	ref/srcs/parse_cmd.c	/^static int	line_count(char *str)$/
make_cmd_list	ref/srcs/child_make_list.c	/^char	**make_cmd_list(t_cmd *cmd)$/
make_env_list	ref/srcs/child.c	/^char	**make_env_list(t_env *env_list)$/
make_file_name	ref/srcs/tmp_file.c	/^static char	*make_file_name(void)$/
make_firstnode	libft/myfunc/to_vector.c	/^static int	make_firstnode(char **str, t_list **lst/
make_id_list	ref/srcs/exec_cmd.c	/^void	make_id_list(t_common_process *common_process/
make_path_list	ref/srcs/child_make_list.c	/^char	**make_path_list(char **env_list)$/
make_pipe_cmd	ref/srcs/pipe_utils.c	/^t_cmd	*make_pipe_cmd(t_cmd **cmd)$/
make_token	lexer/to_token.c	/^static t_token	*make_token(char **line)$/
measure_cmd_len	ref/srcs/child_make_list.c	/^static int	measure_cmd_len(t_cmd *cmd)$/
middle_pipe	ref/srcs/pipe.c	/^int	middle_pipe(t_common_process *c_p, int where_f/
middle_pipe_c	ref/srcs/pipe.c	/^static void	middle_pipe_c(t_cmd *pipe_cmd, t_commo/
middle_pipe_p	ref/srcs/pipe.c	/^static void	middle_pipe_p(t_common_process *c_p, /
mini_getenv	utils/utils.c	/^char	*mini_getenv(const char *key, t_info *info)$/
multi_procs	exec/multi_procs.c	/^int	multi_procs(t_proc *proc, t_info *info)$/
no_cmd_handler	exec/single_proc.c	/^int	no_cmd_handler(t_proc *proc, t_info *info)$/
out_redirect_open	exec/ft_open.c	/^static int	out_redirect_open(char *file)$/
parse_cmd	ref/srcs/parse_cmd.c	/^t_cmd	*parse_cmd(char **str)$/
parse_line	parser/parse_line.c	/^int	parse_line(t_proc **procs, char *line)$/
path_from_env	exec/ft_exec.c	/^static char	*path_from_env(char *cmd, char *strenv/
pids_wait	exec/multi_procs.c	/^static int	pids_wait(pid_t pids[], int num_pids)$/
pipes_close	exec/pipe_utils.c	/^void	pipes_close(int pipes[][2], int num_pipes)$/
print_all_env	env/main.c	/^void	print_all_env(t_dict *env)$/
print_error_return	ref/srcs/utils.c	/^int	print_error_return(char *str)$/
print_error_strings	ref/srcs/env_builtin.c	/^int	print_error_strings(char *message_1, char *mes/
print_iolist	parser/test/utils_test.c	/^void	print_iolist(t_io *io_info)$/
print_procinfo	parser/test/utils_test.c	/^void	print_procinfo(t_proc *proc, int ex_status)$/
print_proclist	parser/test/utils_test.c	/^void	print_proclist(t_proc *head, int ex_status)$/
print_tokens	lexer/test/test_to_token.c	/^void	print_tokens(t_token *head)$/
print_vector	parser/test/utils_test.c	/^void	print_vector(char **vector)$/
proc_child_stop_by_sig	ref/srcs/signal_handler.c	/^int	proc_child_stop_by_sig(int sig)$/
proc_lstadd_back	parser/proc_lst.c	/^void	proc_lstadd_back(t_proc **lst, t_proc *new)$/
proc_lstclear	parser/proc_lstdel.c	/^void	proc_lstclear(t_proc **lst)$/
proc_lstdelone	parser/proc_lstdel.c	/^void	proc_lstdelone(t_proc *lst)$/
proc_lstlast	parser/proc_lst.c	/^t_proc	*proc_lstlast(t_proc *lst)$/
proc_lstnew	parser/proc_lst.c	/^t_proc	*proc_lstnew(void)$/
proc_num_count	parser/proc_lst.c	/^int	proc_num_count(t_proc *head)$/
put_error_message	ref/srcs/child_exec.c	/^void	put_error_message(char **cmd_list, char **pat/
put_error_str	ref/srcs/utils2.c	/^void	put_error_str(char *cmd, char *message, int f/
put_str_itoa	ref/libft/ft_itoa.c	/^static char	*put_str_itoa(char *numstr, int n, int/
put_str_itoa_no_malloc1	ref/libft/ft_putnbr_fd.c	/^static void	put_str_itoa_no_malloc1(int n, char nu/
put_str_itoa_no_malloc2	ref/libft/ft_putnbr_fd.c	/^static char	*put_str_itoa_no_malloc2(char *numstr,/
put_str_rev_str_no_malloc	ref/libft/ft_putnbr_fd.c	/^static void	put_str_rev_str_no_malloc(char *tab, i/
pwd_cmd	ref/srcs/builtin_2.c	/^int	pwd_cmd(t_env *env_list)$/
re_chain_cmd	ref/srcs/utils2.c	/^void	re_chain_cmd(t_cmd *cmd)$/
redirect_pipe	exec/pipe_utils.c	/^void	redirect_pipe(t_io *io_info, t_info *info)$/
redirect_reset	exec/pipe_utils.c	/^int	redirect_reset(t_io *io_info, t_info *info)$/
remove_quote	parser/remove_quote.c	/^t_token	*remove_quote(t_token *tokens)$/
remove_quote_in_token	parser/remove_quote.c	/^char	*remove_quote_in_token(char *word)$/
replace_str	ref/srcs/srakuma_utils_1.c	/^char	*replace_str(char *haystack, char *old, char /
restore_stdio	ref/srcs/exec_cmd_pipe.c	/^int	restore_stdio(int save_fd[2], int return_value/
rewrite_envlist	ref/srcs/proc_env.c	/^void	rewrite_envlist(t_env *env_list, char *key, c/
rl_loop	ref/srcs/main.c	/^void	rl_loop(t_env *env_list)$/
rl_loop_get_cmd	ref/srcs/main.c	/^int	rl_loop_get_cmd(t_cmd **cmd)$/
save_file_name	ref/srcs/tmp_file.c	/^void	save_file_name(char *file_name)$/
save_stdfd	utils/utils.c	/^void	save_stdfd(t_info *info)$/
search_cmd	ref/srcs/general_builtin.c	/^int	search_cmd(t_env **env_list, t_cmd *cmd)$/
search_cmd_len	ref/srcs/ft_substr_cmd.c	/^static void	search_cmd_len(t_cmd *cmd, char *str, /
search_key	ref/srcs/proc_env.c	/^t_bilst	*search_key(t_bilst *bi_list, const char */
search_len_1	ref/srcs/get_cmd_search_len.c	/^static size_t	search_len_1(size_t *str_index, size/
search_len_2	ref/srcs/get_cmd_search_len.c	/^static size_t	search_len_2(size_t *str_index, size/
search_len_3	ref/srcs/get_cmd_search_len.c	/^static size_t	search_len_3(char *str, size_t *str_/
search_len_4	ref/srcs/get_cmd_search_len.c	/^static size_t	search_len_4(char *str, size_t *str_/
search_path_exec	ref/srcs/child_exec.c	/^char	*search_path_exec(char **cmd_list, char **pat/
search_prefix	expander/utils.c	/^char	*search_prefix(char *word)$/
send_newline	signal/signal.c	/^void	send_newline(int sig)$/
set_answer_memo	ref/libft/ft_split.c	/^static char	**set_answer_memo(const char *str, cha/
set_cmdinfo	parser/set_cmdinfo.c	/^char	**set_cmdinfo(t_token **tokens)$/
set_each_procinfo	parser/set_procinfo.c	/^static void	set_each_procinfo(t_proc *proc, t_toke/
set_envlist	ref/srcs/proc_env.c	/^t_env	*set_envlist(char **envp)$/
set_fd	ref/srcs/child.c	/^int	set_fd(int	in_fd, int out_fd)$/
set_ioinfo	parser/set_ioinfo.c	/^t_io	*set_ioinfo(t_token *tokens)$/
set_key_value	ref/srcs/proc_env.c	/^int	set_key_value(char *str, char **key, char **va/
set_kind_info	lexer/to_token.c	/^static enum e_kind	set_kind_info(const char *str)$/
set_parse_cmd	ref/srcs/set_parse_cmd.c	/^int	set_parse_cmd(t_cmd **res, char *str)$/
set_procinfo	parser/set_procinfo.c	/^t_proc	*set_procinfo(t_proc *procs, t_token *token/
set_signal_ignore	signal/signal.c	/^void	set_signal_ignore(void)$/
set_signal_in_cmd	signal/signal.c	/^void	set_signal_in_cmd(void)$/
set_signal_in_heredoc	signal/signal.c	/^void	set_signal_in_heredoc(void)$/
set_signal_in_read	signal/signal.c	/^void	set_signal_in_read(void)$/
set_string	lexer/test/test_to_token.c	/^void	set_string(char **kstr)$/
set_strings_from_list	libft/myfunc/to_vector.c	/^static char	**set_strings_from_list(t_list *head)$/
set_tmpfile	ref/srcs/tmp_file.c	/^int	set_tmpfile(t_cmd *cmd, t_common_process *c_p)/
shell_init	utils/shell_init.c	/^t_info	*shell_init(void)$/
shell_sig_handler	ref/srcs/signal_handler.c	/^void	shell_sig_handler(int sig)$/
sig_error	ref/srcs/signal_handler.c	/^int	sig_error(int num)$/
single_proc	exec/single_proc.c	/^int	single_proc(t_proc *proc, t_info *info)$/
sorted_print	ref/srcs/builtin_export.c	/^int	sorted_print(t_env *env_list)$/
str_is_space_only	ref/srcs/set_parse_cmd.c	/^int	str_is_space_only(char *str, size_t str_index)/
strlen_key	expander/expand_var.c	/^size_t	strlen_key(char *start)$/
t_bilst	ref/srcs/struct.h	/^}				t_bilst;$/
t_cmd	ref/srcs/struct.h	/^}				t_cmd;$/
t_common_process	ref/srcs/struct.h	/^}				t_common_process;$/
t_dict	libft/myfunc/dict.h	/^}				t_dict;$/
t_env	ref/srcs/struct.h	/^typedef t_bilst	t_env;$/
t_info	utils/utils.h	/^}	t_info;$/
t_io	parser/parser.h	/^}	t_io;$/
t_list	libft/subject/libft.h	/^}	t_list;$/
t_minishell	ref/srcs/struct.h	/^}				t_minishell;$/
t_proc	parser/parser.h	/^}	t_proc;$/
t_stdfd	utils/utils.h	/^}	t_stdfd;$/
t_tmp	ref/srcs/struct.h	/^}				t_tmp;$/
t_token	lexer/token.h	/^}	t_token;$/
terminate_heredoc	signal/signal.c	/^void	terminate_heredoc(int sig)$/
terminate_syntaxerr	parser/parse_line.c	/^int	terminate_syntaxerr(t_token *tokens)$/
test_append_nonvar	expander/test/test_append_nonvar.c	/^void	test_append_nonvar(char *str, char *tail, siz/
test_append_nonvars	expander/test/test_append_nonvar.c	/^void	test_append_nonvars(void)$/
test_args_check	env/main.c	/^void	test_args_check(char **args)$/
test_count_process	parser/test/test_count.c	/^void	test_count_process(char *line, char *tstmsg)$/
test_count_processes	parser/test/test_count.c	/^void	test_count_processes(void)$/
test_count_quote	parser/test/test_count_quote.c	/^void	test_count_quote(char *line, char *tstmsg)$/
test_count_quotes	parser/test/test_count_quote.c	/^void	test_count_quotes(void)$/
test_enum_kind	lexer/test/test_utils.c	/^void	test_enum_kind(void)$/
test_expand_exit_status	expander/test/test_expand_var.c	/^void	test_expand_exit_status(void)$/
test_expand_var	expander/test/test_expand_var.c	/^void	test_expand_var(char *word, char *tstmsg)$/
test_expand_var_all	expander/test/test_expand_var_all.c	/^void	test_expand_var_all(char *line, char *tstmsg)/
test_expand_var_alls	expander/test/test_expand_var_all.c	/^void	test_expand_var_alls(void)$/
test_expand_vars	expander/test/test_expand_var.c	/^void	test_expand_vars(void)$/
test_init_procinfo	parser/test/test_init.c	/^void	test_init_procinfo(char *line, char *tstmsg)$/
test_init_procinfos	parser/test/test_init.c	/^void	test_init_procinfos(void)$/
test_is_ifs	lexer/test/test_utils.c	/^void	test_is_ifs(void)$/
test_operator	lexer/test/test_operator.c	/^void	test_operator(void)$/
test_parse_line	parser/test/test_parse_line.c	/^void	test_parse_line(char *line, char *tstmsg)$/
test_parse_lines	parser/test/test_parse_line.c	/^void	test_parse_lines(void)$/
test_pipe	test/test_pipe.c	/^void	test_pipe(t_info *info)$/
test_quote	lexer/test/test_quote.c	/^void	test_quote(void)$/
test_rm_quote	parser/test/test_rm_quote.c	/^void	test_rm_quote(char *line, char *tstmsg)$/
test_rm_quote_word	parser/test/test_rm_quote.c	/^void	test_rm_quote_word(char *word, char *tstmsg)$/
test_rm_quote_words	parser/test/test_rm_quote.c	/^void	test_rm_quote_words(void)$/
test_rm_quotes	parser/test/test_rm_quote.c	/^void	test_rm_quotes(void)$/
test_search_prefix	expander/test/test_search_prefix.c	/^void	test_search_prefix(char *word, char *tstmsg)$/
test_search_prefixs	expander/test/test_search_prefix.c	/^void	test_search_prefixs(void)$/
test_set_pipe	test/test_pipe.c	/^t_proc	*test_set_pipe(char *line, t_info *info)$/
test_set_procinfo	parser/test/test_set.c	/^void	test_set_procinfo(char *line, char *tstmsg)$/
test_set_procinfos	parser/test/test_set.c	/^void	test_set_procinfos(void)$/
test_start	parser/test/test_count.c	/^void	test_start(void)$/
test_strclen_array	expander/test/test_strclen_array.c	/^void	test_strclen_array(char *str, char *sep, char/
test_strclen_arrays	expander/test/test_strclen_array.c	/^void	test_strclen_arrays(void)$/
test_strndup	lexer/test/test_utils.c	/^void	test_strndup(void)$/
test_tknlist	lexer/test/test_utils.c	/^void	test_tknlist(void)$/
test_to_token	lexer/test/test_to_token.c	/^void	test_to_token(char *line, char *tstmsg)$/
test_validate	parser/test/test_validate.c	/^void	test_validate(char *line, char *tstmsg)$/
test_validates	parser/test/test_validate.c	/^void	test_validates(void)$/
tkn_lstadd_back	lexer/tkn_lst.c	/^void	tkn_lstadd_back(t_token **lst, t_token *new)$/
tkn_lstclear	lexer/tkn_lstdel.c	/^void	tkn_lstclear(t_token **lst, void(*del)(void */
tkn_lstdelone	lexer/tkn_lstdel.c	/^void	tkn_lstdelone(t_token *lst, void (*del)(void /
tkn_lstlast	lexer/tkn_lst.c	/^t_token	*tkn_lstlast(t_token *lst)$/
tkn_lstnew	lexer/tkn_lst.c	/^t_token	*tkn_lstnew(char *str)$/
tkn_strlen	lexer/tkn_strlen.c	/^size_t	tkn_strlen(const char *start)$/
tkn_strlen_operator	lexer/tkn_strlen.c	/^static size_t	tkn_strlen_operator(const char *star/
tkn_strlen_word	lexer/tkn_strlen.c	/^static size_t	tkn_strlen_word(const char *start)$/
to_proclist	parser/to_proclist.c	/^t_proc	*to_proclist(t_token *tokens)$/
to_tokenlist	lexer/to_token.c	/^t_token	*to_tokenlist(char *line)$/
to_vector	libft/myfunc/to_vector.c	/^char	**to_vector(int fd)$/
translate_heredoc	ref/srcs/heredoc_find.c	/^char	*translate_heredoc(char **line, t_env *env_li/
translate_heredoc_find	ref/srcs/heredoc_find.c	/^static int	translate_heredoc_find(char **line, t_e/
translate_heredoc_find_shell	ref/srcs/heredoc_find.c	/^static void	translate_heredoc_find_shell(char **li/
translate_string	ref/srcs/var_expansion.c	/^void	translate_string(t_cmd **cmd, t_env *env_list/
try_exec	ref/srcs/child_exec.c	/^static int	try_exec(char **cmd_list, char **path_l/
unset_cmd	ref/srcs/env_builtin.c	/^int	unset_cmd(t_env **env_list, t_cmd *cmd)$/
use_funcptr	parser/main.c	/^void	use_funcptr(int idx)$/
validate_cmd	ref/srcs/validate_cmd.c	/^int	validate_cmd(t_cmd *cmd)$/
validate_cmd_check	ref/srcs/validate_cmd.c	/^static int	validate_cmd_check(t_cmd *cmd, int *fla/
validate_cmd_check_q	ref/srcs/validate_cmd.c	/^static int	validate_cmd_check_q(t_cmd *cmd)$/
validate_operator_position	parser/validate_syntax.c	/^static bool	validate_operator_position(t_token *to/
validate_pipe_position	parser/validate_syntax.c	/^static bool	validate_pipe_position(t_token *tokens/
validate_syntax	parser/validate_syntax.c	/^bool	validate_syntax(t_token *tokens)$/
wait_child_process	ref/srcs/exec_cmd_pipe.c	/^static int	wait_child_process(t_common_process *co/
xdict_new	libft/myfunc/xdict_new.c	/^t_dict	*xdict_new(char *key, char *value)$/
xdict_to_array	libft/myfunc/xdict_to_array.c	/^char	**xdict_to_array(t_dict *dict_head, char *con/
xdup	libft/myfunc/xdup.c	/^int	xdup(int fd)$/
xdup2	libft/myfunc/xdup2.c	/^void	xdup2(int fd1, int fd2)$/
xdup2_close	exec/pipe_utils.c	/^static void	xdup2_close(int fd1, int fd2)$/
xfork	libft/myfunc/xfork.c	/^pid_t	xfork(void)$/
xmalloc	libft/myfunc/xmalloc.c	/^void	*xmalloc(size_t size)$/
xperror	libft/myfunc/xperror.c	/^void	xperror(char *s)$/
xpipe	libft/myfunc/xpipe.c	/^void	xpipe(int *fd)$/
